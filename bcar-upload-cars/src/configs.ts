const {
  NODE_ENV,
  BCAR_ANSAN_CROSS_LOGIN_URL,
  BCAR_ANSAN_CROSS_CAR_REGISTER_URL,
  TMP_ID,
  TMP_PW,
  DYNAMO_DB_REGION,
  BCAR_TABLE,
  BCAR_INDEX,
  BCAR_CATEGORY_TABLE,
  BCAR_CATEGORY_INDEX,
  REGION,
  JOB_DEFINITION_NAME,
  PRIVATE_REGISTRY_BASE_URL,
  PRIVATE_REGISTRY_PATH,
  TAG_NAME,
  TASK_EXECUTION_ROLE_ARN,
} = process.env

const envs = {
  NODE_ENV: NODE_ENV || "local",
  BCAR_ANSAN_CROSS_LOGIN_URL: BCAR_ANSAN_CROSS_LOGIN_URL!,
  BCAR_ANSAN_CROSS_CAR_REGISTER_URL: BCAR_ANSAN_CROSS_CAR_REGISTER_URL!,
  TMP_ID: TMP_ID!,
  TMP_PW: TMP_PW!,
  DYNAMO_DB_REGION: DYNAMO_DB_REGION!,
  BCAR_TABLE: BCAR_TABLE!,
  BCAR_INDEX: BCAR_INDEX!,
  BCAR_CATEGORY_TABLE: BCAR_CATEGORY_TABLE!,
  BCAR_CATEGORY_INDEX: BCAR_CATEGORY_INDEX!,
}

const deployEnvs = {
  REGION: REGION!,
  JOB_DEFINITION_NAME: JOB_DEFINITION_NAME!,
  PRIVATE_REGISTRY_BASE_URL: PRIVATE_REGISTRY_BASE_URL!,
  PRIVATE_REGISTRY_PATH: PRIVATE_REGISTRY_PATH!,
  TAG_NAME: TAG_NAME!,
  TASK_EXECUTION_ROLE_ARN: TASK_EXECUTION_ROLE_ARN!,
}

if (envs.NODE_ENV === 'prod') {
  console.table(process.env);
}

// 여기서 false
if (!Object.values(envs).every(env => env !== undefined)) {
  throw new Error('Importing required env failed')
}

export { envs, deployEnvs }
