name: Main
run-name: 'Main üöÄ'
on:
  push:
    branches:
      - 'main'

jobs:
  Serverless-Deploy:
    timeout-minutes: 5
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        node-version: [16.x]
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - run: cd ./serverless && npm ci
    - name: serverless deploy
      uses: serverless/github-action@v3.2
      with:
        args: -c "cd ./serverless && serverless deploy"
        entrypoint: /bin/sh
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  Build-Image:
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: 'true'

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.PRIVATE_REGISTRY_BASE_URL }}/${{ secrets.PRIVATE_REGISTRY_REPOSITORY }}:prod
          cache-from: type=gha
          cache-to: type=gha,mode=max
# Ï∂îÍ∞ÄÏ†ÅÏúºÎ°ú Ìï¥ÏïºÌï† Í≤É
# register jobdefinition


